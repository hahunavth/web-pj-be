version: '3.8'

services:
    db:
        image: postgres:15.1
        container_name: postgres_2
        restart: always
        networks:
            - docker_network
        ports:
            - 54321:5432
        expose:
            - 5432
        environment:
            POSTGRES_PASSWORD: postgres
        volumes:
            - ./postgres-data:/var/lib/postgresql/data

    # db_setup:
    #     image: postgres:15.1
    #     depends_on:
    #         - db
    #     restart: "no"
    #     command: echo start_db_setup; echo 2;
    #     entrypoint:
    #         ["bash", "/usr/src/app/dist/endtrypoint.sh"]
            # ["bash", "-c", "ls", "/usr/src/app/dist/"]
            # ["bash", "-c" ,"'cd", "/usr/src/app/;", "npx", "prisma", "migration", "production;", "echo aaaaaa;"]

    prod:
        container_name: nestjs_api_prod
        image: nestjs-api-prod:1.0.0
        build:
            context: .
            target: production
            dockerfile: ./Dockerfile
        command: node  /usr/src/app/dist/src/main.js
        networks:
            - docker_network
        ports:
            - 3000:3000
            - 9229:9229
        environment:
            DATABASE_URL: postgresql://postgres:postgres@db:5432/postgres
            JWT_SECRET: abc
            JwT_REFRESH_SECRET: abc
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
        depends_on:
            - db

    server:
        container_name: nginx-custom
        image: nginx-image:latest
        build:
            context: .
            target: production
            dockerfile: ../docker-nginx/Dockerfile
        networks:
            - docker_network
        ports:
            - 800:800
        depends_on:
            - db
            - prod

networks:
  docker_network:
    driver: bridge
