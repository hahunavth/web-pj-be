// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  // provider = env("DATABASE_PROVIDER")  || "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  role      Role
  // 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // 
  // Post     Post[]
}

model UserToken {
  userId    Int      @unique
  token     String
  // 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model Post {
//   id       Int    @id @default(autoincrement())
//   name     String
//   // 
//   author   User   @relation(fields: [authorId], references: [id])
//   authorId Int
// }

model Author {
  id        Int      @id @default(autoincrement())
  name      String
  // 
  Book      Book[]
  // 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Book {
  id             Int      @id @default(autoincrement())
  poster         String
  type           String // book, manga, 
  name           String // @db.VarChar(200)
  price          Int
  supplier       String
  publisher      String
  discount       Int
  code           Int
  publishingDate DateTime
  translator     String
  weight         Int
  width          Float
  height         Float
  form           String // Bia mem / cung ?
  details        String // Mo ta
  rate           Int
  // 
  quantity       Decimal
  // 
  author         Author   @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  authorId       Int
  // 
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  // 
  // OrderItem      OrderItem[]
}

// model Order {
//   orders Order[]
//   Order  Order   @relation(fields: [], references: [])
// }

// model OrderItem {
//   book   Book @relation(fields: [bookId], references: [id])
//   bookId Int
// }
